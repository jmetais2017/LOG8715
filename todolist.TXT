1 - Séparer le code du gros système de Mouvement-Collisions en fonctions utilitaires partagées applicables à 1 entité
	a - Gérer avec un tag les entités pour lesquelles il y a une collision à traiter
	b - Appeler 5 cycles à chaque frame dans la partie haute vs 1 dans la partie basse


	=> FAIT 


2 - Introduire un component "isFirstFrame" pour gérer l'auto-désactivation du système de création

	=> FAIT


3 - Limiter le frame rate (avec un waitSystem ?)

	=> Il semblerait que les FPS sont déjà limitées par Unity ? 

4 - Gérer les valeurs numériques constantes pour ne pas laisser de "valeurs magiques" codées en dur

	=> FAIT (pour le cooldown, y en a-t-il d'autres ?)


5 - Obtenir la taille en pixels d'un cercle pour les collisions avec le bord de l'écran

6 - Tester la solution avec différentes configurations (nombre de cercles, tailles, vitesses, densité...)

7 - Evaluer les performances sur la durée / sur différents ordis

8 - Ajouter des commentaires sur certains détails d'implémentation qu'on ne pourra pas aborder dans le rapport

9 - Eventuellement prévoir une méthode de rupture de collision (repousser les cercles l'un hors de l'autre...) pour éviter les cas extrêmes / instables